{"version":3,"sources":["components/ColumnLoader.module.css","components/Webapp.module.css","components/FullLoader.module.css","components/Kanban.module.css","components/Toggler.module.css","components/Detail.module.css","components/Phone.module.css","components/Tablet.module.css","components/Dropdown.module.css","components/constants.js","components/ColumnLoader.jsx","components/Detail.jsx","components/Dropdown.jsx","components/FullLoader.jsx","components/Kanban.jsx","components/Phone.jsx","components/Tablet.jsx","components/Toggler.jsx","components/Webapp.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","titles","loaders","id","name","value","viewPorts","classes","list","filter","c","join","SkellyCard","loader","className","styles","card","skellington","arrival","map","ColumnLoader","layout","cardedLayout","bolisContainer","bolis","Detail","children","useState","setLoader","mobile","setMobile","controls","options","onChange","selected","Dropdown","container","e","target","option","key","FullLoader","Card","Colum","isLoading","column","idxx","Kanban","idx","Phone","screen","Tablet","Toggler","button","depressedButton","onClick","Webapp","section","setSection","setIsLoading","setTimeout","header","mobileHeader","brand","sections","title","index","selectedButton","user","sectionHeader","about","content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75d80dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"ColumnLoader_layout__lKyQo\",\"cardedLayout\":\"ColumnLoader_cardedLayout__1HggU\",\"bolisContainer\":\"ColumnLoader_bolisContainer__b3xc6\",\"bolis\":\"ColumnLoader_bolis__2YKV1\",\"bouncy\":\"ColumnLoader_bouncy__Ro_OW\",\"card\":\"ColumnLoader_card__3lxmR\",\"skellington\":\"ColumnLoader_skellington__2xMYC\",\"skelleton\":\"ColumnLoader_skelleton__33MBx\",\"arrival\":\"ColumnLoader_arrival__21my5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Webapp_container__20hD0\",\"header\":\"Webapp_header__3lOPu\",\"mobileHeader\":\"Webapp_mobileHeader__yGoPR\",\"user\":\"Webapp_user__3GCxh\",\"brand\":\"Webapp_brand__3jEzt\",\"button\":\"Webapp_button__F_lK8\",\"selectedButton\":\"Webapp_selectedButton__2UURe\",\"sectionHeader\":\"Webapp_sectionHeader__tOJAx\",\"about\":\"Webapp_about__2mhIC\",\"user \":\"Webapp_user __4bJS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"FullLoader_layout__5EEZU\",\"bolisContainer\":\"FullLoader_bolisContainer__jtbDD\",\"bolis\":\"FullLoader_bolis__GilL6\",\"bouncy\":\"FullLoader_bouncy__1l88x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Kanban_container__4zpD1\",\"column\":\"Kanban_column__1j6ml\",\"card\":\"Kanban_card__q7Gfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toggler_container__1fZ8E\",\"button\":\"Toggler_button__24vcr\",\"depressedButton\":\"Toggler_depressedButton__dMlOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Detail_layout__2iHAD\",\"controls\":\"Detail_controls__1UYph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phone_container__1ioOL\",\"screen\":\"Phone_screen__1J8a6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tablet_container__A9xof\",\"screen\":\"Tablet_screen__uy-rC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dropdown_container__2gmfg\"};","export const titles = [\"Houses\", \"Buyers\", \"About\"];\nexport const loaders = [\n    {\n        id: 1,\n        name: \"Full Screen Loader (Current)\",\n        value: \"current\",\n    },\n    {\n        id: 2,\n        name: \"Individual Loader\",\n        value: \"individual\",\n    },\n    {\n        id: 3,\n        name: \"Card Skelington\",\n        value: \"skellington\",\n    },\n    {\n        id: 4,\n        name: \"Content Skelington\",\n        value: \"inner-skellington\",\n    },\n    {\n        id: 5,\n        name: \"Card Arrival\",\n        value: \"arrival\",\n    },\n];\n\nexport const viewPorts = [\n    {\n        id: 1,\n        name: \"Desktop\",\n        value: false,\n    },\n    {\n        id: 2,\n        name: \"Mobile\",\n        value: true,\n    },\n];\n\nexport const dolorSit = `Dolor sit amet, consectetur adipiscing elit. \nNulla non blandit felis, at suscipit libero. \nPellentesque feugiat dictum consectetur. `;\n\nexport const about = `This small project was developed as a UI test, \nto ilustrate a couple of different options to use as loaders for an internal project in my current job.\nThis implementation is not ment to be used under production. \nFeel free to leave any comments or check the source code!\nCreated using: react, css-modules and js.\nDeveloped in August 2020 by uli.\n`;\n\nexport const classes = (...list) => list.filter(c => c).join(\" \");\n","import React from 'react';\nimport { loaders, classes } from \"./constants\";\nimport styles from \"./ColumnLoader.module.css\";\n\nconst SkellyCard = ({loader}) => (\n    <div className={classes(\n        styles.card,\n        loader === loaders[2].value && styles.skellington,\n        loader === loaders[4].value && styles.arrival,\n    )}>\n        {loader === \"inner-skellington\" && [1,2,3].map(() => (\n            <h3 className={styles.skellington}>&nbsp;</h3>\n        ))}\n    </div>\n);\n\nconst ColumnLoader = ({ loader }) => (\n    <div className={classes(\n            styles.layout,\n            loader !== loaders[1].value && styles.cardedLayout,\n        )}\n    >\n        {loader === loaders[1].value ? (\n            <div className={styles.bolisContainer}>\n                <div className={styles.bolis}></div>\n                <div className={styles.bolis}></div>\n                <div className={styles.bolis}></div>\n            </div>\n        ) : (\n            <div>\n                {[1,2,3].map(() => (\n                    <SkellyCard loader={loader} />\n                ))}\n            </div>\n        )}\n    </div>\n);\n\nexport default ColumnLoader;\n","import React, { useState } from 'react';\nimport { Phone, Tablet, Dropdown, Toggler, Webapp } from \".\";\nimport { viewPorts, loaders } from \"./constants\";\nimport styles from \"./Detail.module.css\";\n\nconst Detail = ({ ...props }) => {\n  const [loader, setLoader] = useState(loaders[0].value);\n  const [mobile, setMobile] = useState(viewPorts[0].value);\n\n  const Wrapper = children => {\n    if (mobile) return (\n      <Phone>\n        {children}\n      </Phone>\n    )\n    \n    return (\n      <Tablet>\n        {children}\n      </Tablet>\n    )\n  };\n\n  return (\n    <div className={styles.layout}>\n        {Wrapper(\n          <Webapp loader={loader} mobile={mobile} />\n        )}\n        <div className={styles.controls}>\n          <Dropdown options={loaders} onChange={setLoader} />\n          <Toggler options={viewPorts} selected={mobile} onChange={setMobile} />\n        </div>\n    </div>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\nimport styles from \"./Dropdown.module.css\";\n\nconst Dropdown = ({ options, children, onChange }) => {\n  return (\n    <select\n        id=\"loaders\"\n        className={styles.container}\n        onChange={e => onChange(e.target.value)}\n    >\n        {options.map(option => (\n            <option\n                id={option.id}\n                key={option.id}\n                value={option.value}\n            >\n                {option.name}\n            </option>\n        ))}\n    </select>\n  );\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport styles from \"./FullLoader.module.css\";\n\nconst FullLoader = () => (\n    <div className={styles.layout}>\n        <div className={styles.bolisContainer}>\n            <div className={styles.bolis}></div>\n            <div className={styles.bolis}></div>\n            <div className={styles.bolis}></div>\n        </div>\n    </div>\n);\n\nexport default FullLoader;\n","import React from 'react';\nimport { dolorSit } from \"./constants\";\nimport { ColumnLoader } from \".\";\nimport styles from \"./Kanban.module.css\";\n\nconst Card = () => (\n    <div className={styles.card}>\n        <h4>Lorem Ipsum</h4>\n        <p>\n            {dolorSit}\n        </p>\n    </div>\n);\n\nconst Colum = ({ isLoading, loader }) => (\n  <div className={styles.column}>\n    {!isLoading && [1,2,3,4,5].map(idxx => (\n        <Card key={idxx} />\n    ))}\n    {isLoading && loader !== \"current\" && (\n        <ColumnLoader loader={loader} />\n    )}\n  </div>\n);\n\nconst Kanban = ({ loader, isLoading }) => {\n  return (\n    <div className={styles.container}>\n      {[1,2,3,4,5].map(idx => (\n        <Colum key={idx} isLoading={isLoading} loader={loader} />\n      ))}\n    </div>\n  );\n}\n\nexport default Kanban;\n","import React from 'react';\nimport styles from \"./Phone.module.css\";\n\nconst Phone = ({ children }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.screen}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Phone;\n","import React from 'react';\nimport styles from \"./Tablet.module.css\";\n\nconst Tablet = ({ children }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.screen}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Tablet;\n","import React from 'react';\nimport { classes } from \"./constants\";\nimport styles from \"./Toggler.module.css\";\n\nconst Toggler = ({ options, selected, children, onChange }) => (\n    <div className={styles.container}>\n        {options.map(option => (\n            <button\n                key={option.id}\n                className={classes(\n                    styles.button,\n                    selected === option.value && styles.depressedButton,\n                )}\n                onClick={() => onChange(option.value)}\n            >\n                {option.name}\n            </button>\n        ))}\n    </div>\n);\n\nexport default Toggler;\n","import React, { useState } from 'react';\nimport styles from \"./Webapp.module.css\";\nimport { Kanban, FullLoader } from \".\";\nimport { titles, about, classes } from \"./constants\";\n\nconst Webapp = ({ loader, mobile }) => {\n    const [section, setSection] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n\n    setTimeout(() => {\n        setIsLoading(!isLoading);\n    }, 4000);\n\n    const content = (section) => (\n        <>\n        <div className={styles.sectionHeader}>\n            <h2>{titles[section]}</h2>\n        </div>\n        {section === 2 ? (\n            <p className={styles.about}>\n                {about}\n            </p>\n        ) : (\n            <Kanban loader={loader} isLoading={isLoading} />\n        )}\n        </>\n    );\n\n    return (\n        <div className={styles.container}>\n            {isLoading && loader === \"current\" && section !== 2 && (\n                <FullLoader />\n            )}\n\n            <header className={classes(\n                styles.header,\n                mobile && styles.mobileHeader,\n            )}>\n                <h2 className={styles.brand}>Trulijom</h2>\n                <div className={styles.sections}>\n                    {titles.map((title, index) => (\n                        <button\n                            className={classes(\n                                styles.button,\n                                section === index && styles.selectedButton,\n                            )}\n                            onClick={() => setSection(index)}\n                            key={index}\n                        >\n                            {titles[index]}\n                        </button>\n                    ))}\n                </div>\n                <div className={styles.user}>\n                    <p>\n                        Uli Uliu\n                    </p>\n                    <p>\n                        Front-end Developer\n                    </p>\n                </div>\n            </header>\n\n            {content(section)}\n        </div>\n    );\n}\n\nexport default Webapp;\n","import React from 'react';\nimport './App.css';\nimport { Detail } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Kanbanuli Loaders\n        </h1>\n      </header>\n\n      <Detail />\n\n      <footer className=\"App-footer\">\n        Developed by Ulises Torner 2020\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}